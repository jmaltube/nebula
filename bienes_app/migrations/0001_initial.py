# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2016-04-02 16:46
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Abastecimiento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('denominacion', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name_plural': 'Formas de Abastecimiento',
                'verbose_name': 'Forma de Abastecimiento',
                'ordering': ['denominacion'],
            },
        ),
        migrations.CreateModel(
            name='Bien',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=50)),
                ('denominacion', models.CharField(max_length=100)),
                ('costo', models.DecimalField(decimal_places=2, max_digits=10)),
                ('unidad', models.CharField(choices=[('UN', 'Unidades'), ('KG', 'Kilogramos'), ('MT', 'Metros'), ('LT', 'Litros')], default='UN', max_length=5)),
                ('importado', models.BooleanField(default=False)),
                ('sin_stock', models.BooleanField(default=False)),
                ('bulto', models.DecimalField(decimal_places=2, max_digits=10)),
                ('imagen', models.ImageField(default='Bien/none.png', upload_to='Bien/')),
                ('visible', models.BooleanField(default=True, editable=False)),
            ],
            options={
                'verbose_name_plural': 'Bienes',
                'ordering': ['codigo', 'denominacion'],
                'permissions': (('action_bien', 'Ejecutar acciones'),),
            },
        ),
        migrations.CreateModel(
            name='Clasificador',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('denominacion', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name_plural': 'Clasificadores',
                'ordering': ['denominacion'],
            },
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('direccion', models.CharField(max_length=50)),
                ('partido', models.CharField(max_length=50)),
                ('localidad', models.CharField(max_length=50)),
                ('provincia', models.CharField(max_length=50)),
                ('pais', models.CharField(max_length=50)),
                ('habilitado', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Compra',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('base_costeo', models.BooleanField()),
                ('ultima_fecha', models.DateField(auto_now_add=True)),
                ('bulto', models.IntegerField()),
                ('costo', models.DecimalField(decimal_places=2, max_digits=10)),
                ('plazo_entrega', models.PositiveSmallIntegerField()),
                ('dto1', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('dto2', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('dto3', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('bien', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bienes_app.Bien')),
            ],
        ),
        migrations.CreateModel(
            name='Contacto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_apellido', models.CharField(max_length=100, verbose_name='Nombre y apellido')),
                ('cargo', models.CharField(choices=[('COM', 'Comprador'), ('VEN', 'Vendedor'), ('COB', 'Cobrador'), ('PAG', 'Pagos'), ('DIR', 'Director'), ('ADM', 'Administración'), ('SOC', 'Socio/Dueño'), ('OTR', 'Otro')], max_length=3)),
                ('telefono', models.CharField(max_length=50)),
                ('celular', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254)),
                ('horario', models.CharField(max_length=50, verbose_name='Dias y horas de atención')),
            ],
            options={
                'verbose_name_plural': 'Contactos',
                'ordering': ['nombre_apellido'],
            },
        ),
        migrations.CreateModel(
            name='Lista',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50)),
                ('tipo', models.CharField(choices=[('VTA', 'Venta'), ('VRA', 'Vidriera')], default='VTA', max_length=3)),
                ('fecha_vigencia', models.DateField(verbose_name='Fecha de entrada en vigencia')),
                ('aclaraciones', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Listas',
                'ordering': ['tipo', 'nombre'],
                'permissions': (('action_lista', 'Ejecutar acciones'),),
            },
        ),
        migrations.CreateModel(
            name='ListaYBien',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('margen', models.DecimalField(decimal_places=2, max_digits=10)),
                ('visible', models.BooleanField(default=True)),
                ('bien', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bienes_app.Bien')),
                ('lista', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bienes_app.Lista')),
            ],
        ),
        migrations.CreateModel(
            name='ListaYClasificador',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('margen', models.DecimalField(decimal_places=2, max_digits=10)),
                ('visible', models.BooleanField(default=True)),
                ('clasificador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bienes_app.Clasificador')),
                ('lista', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bienes_app.Lista')),
            ],
        ),
        migrations.CreateModel(
            name='Marca',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('denominacion', models.CharField(max_length=50)),
            ],
            options={
                'ordering': ['denominacion'],
            },
        ),
        migrations.CreateModel(
            name='Proveedor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('razon_social', models.CharField(max_length=50)),
                ('nombre_fantasia', models.CharField(max_length=50, verbose_name='Nombre de fantasía')),
                ('telefono', models.CharField(max_length=50)),
                ('fax', models.CharField(max_length=50)),
                ('website', models.CharField(max_length=100)),
                ('email_oficial', models.EmailField(max_length=254)),
                ('tipo', models.CharField(choices=[('BIU', 'Bien de uso'), ('GVA', 'Gastos varios'), ('IMP', 'Impuesto'), ('INS', 'Insumo'), ('MPR', 'Materia prima'), ('PTE', 'Producto terminado'), ('SVC', 'Servicio'), ('SBP', 'Subproducto')], max_length=3)),
                ('direccion', models.CharField(max_length=100)),
                ('codigo_postal', models.CharField(max_length=10)),
                ('partido', models.CharField(max_length=100)),
                ('localidad', models.CharField(max_length=100)),
                ('provincia', models.CharField(max_length=100)),
                ('pais', models.CharField(max_length=100)),
                ('cuit', models.CharField(max_length=11, validators=[django.core.validators.RegexValidator('^\\d{1,11}$', message='No cumple con el formato de CUIT/CUIL')])),
                ('condicion_comercial', models.CharField(choices=[('30F', '30 días F/F'), ('40F', '40 días F/F'), ('60F', '60 días F/F'), ('C40', 'Cheque contra entrega 40 días F/F'), ('CDO', 'Contado'), ('EFT', 'Efectivo'), ('TRF', 'Transferencia')], max_length=3, verbose_name='Forma de entrega')),
                ('forma_entrega', models.CharField(choices=[('REI', 'Se retira en nuestras instalaciones'), ('EEI', 'Se entrega en nuestras instalaciones'), ('RDI', 'Se retira de nuestras instalaciones')], max_length=3)),
                ('iva', models.CharField(choices=[('RI', 'Responsable Inscripto'), ('EXC', 'Excento'), ('MON', 'Monotributista'), ('NOR', 'No Responsable')], max_length=3, verbose_name='Condición frente al IVA')),
                ('fecha_incorporacion', models.DateField()),
                ('tipo_factura', models.CharField(choices=[('FTA', 'Factura A'), ('FTB', 'Factura B'), ('FTA', 'Factura A'), ('FTC', 'Factura C'), ('FTE', 'Factura E'), ('FTM', 'Factura M'), ('NCA', 'Nota de crédito A'), ('NCB', 'Nota de crédito B'), ('NCC', 'Nota de crédito C'), ('NCE', 'Nota de crédito E'), ('NCM', 'Nota de crédito M'), ('NDA', 'Nota de débito A'), ('NDB', 'Nota de débito B'), ('NDC', 'Nota de débito C'), ('NDE', 'Nota de débito E'), ('NDM', 'Nota de débito M')], max_length=3)),
                ('real', models.BooleanField(default=True)),
                ('indirecto', models.BooleanField(default=False)),
                ('agente_perc_iibb', models.BooleanField(default=False, verbose_name='Agente percepcion de IIBB')),
                ('agente_perc_iigg', models.BooleanField(default=False, verbose_name='Agente percepcion de IIGG')),
                ('agente_perc_iva', models.BooleanField(default=False, verbose_name='Agente percepcion de IVA')),
                ('agente_perc_ss', models.BooleanField(default=False, verbose_name='Agente percepcion de seguridad social')),
                ('contactos', models.ManyToManyField(to='bienes_app.Contacto')),
            ],
            options={
                'verbose_name_plural': 'Proveedores',
                'ordering': ['nombre_fantasia', 'razon_social'],
            },
        ),
        migrations.CreateModel(
            name='Rubro',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('denominacion', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name_plural': 'Rubros',
                'ordering': ['denominacion'],
            },
        ),
        migrations.AddField(
            model_name='lista',
            name='bienes',
            field=models.ManyToManyField(through='bienes_app.ListaYBien', to='bienes_app.Bien'),
        ),
        migrations.AddField(
            model_name='lista',
            name='clasificadores',
            field=models.ManyToManyField(through='bienes_app.ListaYClasificador', to='bienes_app.Clasificador'),
        ),
        migrations.AddField(
            model_name='compra',
            name='proveedor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bienes_app.Proveedor'),
        ),
        migrations.AddField(
            model_name='cliente',
            name='contactos',
            field=models.ManyToManyField(to='bienes_app.Contacto'),
        ),
        migrations.AddField(
            model_name='cliente',
            name='lista',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bienes_app.Lista'),
        ),
        migrations.AddField(
            model_name='cliente',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='clasificador',
            name='rubro',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bienes_app.Rubro'),
        ),
        migrations.AddField(
            model_name='bien',
            name='clasificador',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bienes_app.Clasificador'),
        ),
        migrations.AddField(
            model_name='bien',
            name='forma_abastecimiento',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bienes_app.Abastecimiento'),
        ),
        migrations.AddField(
            model_name='bien',
            name='marca',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bienes_app.Marca'),
        ),
        migrations.AddField(
            model_name='bien',
            name='proveedor',
            field=models.ManyToManyField(through='bienes_app.Compra', to='bienes_app.Proveedor'),
        ),
        migrations.AlterUniqueTogether(
            name='listayclasificador',
            unique_together=set([('lista', 'clasificador')]),
        ),
        migrations.AlterUniqueTogether(
            name='listaybien',
            unique_together=set([('lista', 'bien')]),
        ),
        migrations.AlterUniqueTogether(
            name='compra',
            unique_together=set([('proveedor', 'bien')]),
        ),
    ]
